pow(2,3)
# To check the built in functions in python we can use dir()
dir(__builtins__)

# ['ArithmeticError',
#  'AssertionError',
#  'AttributeError',
#  'BaseException',
#  'BaseExceptionGroup',
#  'BlockingIOError',
#  'BrokenPipeError',
#  'BufferError',
#  'BytesWarning',
#  'ChildProcessError',
#  'ConnectionAbortedError',
#  'ConnectionError',
#  'ConnectionRefusedError',
#  'ConnectionResetError',
#  'DeprecationWarning',
#  'EOFError',
#  'Ellipsis',
#  'EncodingWarning',
#  'EnvironmentError',
#  'Exception',
#  'ExceptionGroup',
#  'False',
#  'FileExistsError',
#  'FileNotFoundError',
#  'FloatingPointError',
#  'FutureWarning',
#  'GeneratorExit',
#  'IOError',
#  'ImportError',
#  'ImportWarning',
#  'IndentationError',
#  'IndexError',
#  'InterruptedError',
#  'IsADirectoryError',
#  'KeyError',
#  'KeyboardInterrupt',
#  'LookupError',
#  'MemoryError',
#  'ModuleNotFoundError',
#  'NameError',
#  'None',
#  'NotADirectoryError',
#  'NotImplemented',
#  'NotImplementedError',
#  'OSError',
#  'OverflowError',
#  'PendingDeprecationWarning',
#  'PermissionError',
#  'ProcessLookupError',
#  'RecursionError',
#  'ReferenceError',
#  'ResourceWarning',
#  'RuntimeError',
#  'RuntimeWarning',
#  'StopAsyncIteration',
#  'StopIteration',
#  'SyntaxError',
#  'SyntaxWarning',
#  'SystemError',
#  'SystemExit',
#  'TabError',
#  'TimeoutError',
#  'True',
#  'TypeError',
#  'UnboundLocalError',
#  'UnicodeDecodeError',
#  'UnicodeEncodeError',
#  'UnicodeError',
#  'UnicodeTranslateError',
#  'UnicodeWarning',
#  'UserWarning',
#  'ValueError',
#  'Warning',
#  'ZeroDivisionError',
#  '__IPYTHON__',
#  '__build_class__',
#  '__debug__',
#  '__doc__',
#  '__import__',
#  '__loader__',
#  '__name__',
#  '__package__',
#  '__spec__',
#  'abs',
#  'aiter',
#  'all',
#  'anext',
#  'any',
#  'ascii',
#  'bin',
#  'bool',
#  'breakpoint',
#  'bytearray',
#  'bytes',
#  'callable',
#  'chr',
#  'classmethod',
#  'compile',
#  'complex',
#  'copyright',
#  'credits',
#  'delattr',
#  'dict',
#  'dir',
#  'display',
#  'divmod',
#  'enumerate',
#  'eval',
#  'exec',
#  'filter',
#  'float',
#  'format',
#  'frozenset',
#  'get_ipython',
#  'getattr',
#  'globals',
#  'hasattr',
#  'hash',
#  'help',
#  'hex',
#  'id',
#  'input',
#  'int',
#  'isinstance',
#  'issubclass',
#  'iter',
#  'len',
#  'license',
#  'list',
#  'locals',
#  'map',
#  'max',
#  'memoryview',
#  'min',
#  'next',
#  'object',
#  'oct',
#  'open',
#  'ord',
#  'pow',
#  'print',
#  'property',
#  'range',
#  'repr',
#  'reversed',
#  'round',
#  'set',
#  'setattr',
#  'slice',
#  'sorted',
#  'staticmethod',
#  'str',
#  'sum',
#  'super',
#  'tuple',
#  'type',
#  'vars',
#  'zip']

print("======================Using help()======================")
# To know the functionality of any function, we can use built in function "help"

help(max)

import math
math.sqrt(16)

# To know the functions in a module we can assign the functions
# list to a varialbe, and then print the variable.

dir(math)

# ['__doc__',
#  '__loader__',
#  '__name__',
#  '__package__',
#  '__spec__',
#  'acos',
#  'acosh',
#  'asin',
#  'asinh',
#  'atan',
#  'atan2',
#  'atanh',
#  'cbrt',
#  'ceil',
#  'comb',
#  'copysign',
#  'cos',
#  'cosh',
#  'degrees',
#  'dist',
#  'e',
#  'erf',
#  'erfc',
#  'exp',
#  'exp2',
#  'expm1',
#  'fabs',
#  'factorial',
#  'floor',
#  'fmod',
#  'frexp',
#  'fsum',
#  'gamma',
#  'gcd',
#  'hypot',
#  'inf',
#  'isclose',
#  'isfinite',
#  'isinf',
#  'isnan',
#  'isqrt',
#  'lcm',
#  'ldexp',
#  'lgamma',
#  'log',
#  'log10',
#  'log1p',
#  'log2',
#  'modf',
#  'nan',
#  'nextafter',
#  'perm',
#  'pi',
#  'pow',
#  'prod',
#  'radians',
#  'remainder',
#  'sin',
#  'sinh',
#  'sqrt',
#  'tan',
#  'tanh',
#  'tau',
#  'trunc',
#  'ulp']

# __doc__ is useful to provide some documentation 

math.__doc__
#'This module provides access to the mathematical functions\ndefined
# by the C standard.'


class MyClassObject(object):
    pass

dir(MyClassObject)

# ['__class__',
#  '__delattr__',
#  '__dict__',
#  '__dir__',
#  '__doc__',
#  '__eq__',
#  '__format__',
#  '__ge__',
#  '__getattribute__',
#  '__getstate__',
#  '__gt__',
#  '__hash__',
#  '__init__',
#  '__init_subclass__',
#  '__le__',
#  '__lt__',
#  '__module__',
#  '__ne__',
#  '__new__',
#  '__reduce__',
#  '__reduce_ex__',
#  '__repr__',
#  '__setattr__',
#  '__sizeof__',
#  '__str__',
#  '__subclasshook__',
#  '__weakref__']